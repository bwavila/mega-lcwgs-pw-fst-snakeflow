
localrules: make_bamlists

include: "rules/common.smk"



rule all:
  input: ALLPW


rule index_fasta:
  input:
    genome=config["genome"]
  output:
    fai=config["genome"] + ".fai"
  log:
    "results/logs/index_fasta/log.txt"
  benchmark:
    "results/benchmarks/index_fasta/log.txt"
  shell:
    " samtools index {input.genome} 2> {log} "
    

rule make_bamlists:
  input:
    bl=get_bams_in_pop
  output:
    bl="results/bamlists/{grp}.txt"
  log:
    "results/logs/make_bamlists/{grp}.txt"
  benchmark:
    "results/benchmarks/make_bamlists/{grp}.txt"
  shell:
    "echo {input.bl} | awk '{{for(i=1;i<=NF;i++) print $i}}' > {output.bl} 2> {log} "


rule calc_saf:
  input: 
    genome=config["genome"],
    fai=config["genome"] + ".fai",
    bl="results/bamlists/{grp}.txt"
  params:
    bf=config["params"]["angsd_bam_filters"],
    cs=config["params"]["calc_saf"]
  output:
    saf="results/saf/{grp}.saf.idx"
  threads: 20
  log:
    "results/logs/calc_saf/{grp}.txt"
  benchmark:
    "results/benchmarks/calc_saf/{grp}.txt"
  shell:
    " PREFIX=$(echo {output.saf} | sed 's/\.saf\.idx$//g;');"
    " angsd -b {input.bl} -nThreads {threads} -anc {input.genome} -ref {input.genome} -out $PREFIX {params.cs} {params.bf} > {log} 2>&1 "



rule calc_2dsfs:
  input:
    saf1="results/saf/{p1}.saf.idx",
    saf2="results/saf/{p2}.saf.idx",
  output:
    sfs="results/sfs/{p1}--x--{p2}.ml"
  params:
    rs=config["params"]["realSFS"]
  threads: 20
  log:
    "results/logs/calc_2dsfs/{p1}--x--{p2}.txt"
  benchmark:
    "results/benchmarks/calc_2dsfs/{p1}--x--{p2}.txt"
  shell:
    " realSFS -cores {threads} {params.rs} {input.saf1} {input.saf2} > {output.sfs} 2>{log}"


rule calc_fst_binaries:
  input:
    saf1="results/saf/{p1}.saf.idx",
    saf2="results/saf/{p2}.saf.idx",
    sfs="results/sfs/{p1}--x--{p2}.ml",
  params:
    rs=config["params"]["realSFS"]
  output:
    "results/fst_bin/{p1}--x--{p2}.fst.idx"
  threads: 20
  log:
    "results/logs/calc_fst_binaries/{p1}--x--{p2}.txt"
  benchmark:
    "results/benchmarks/calc_fst_binaries/{p1}--x--{p2}.txt"
  shell:
    " PREFIX=$(echo {output} | sed 's/\.fst\.idx$//g;');                             "
    " realSFS fst index -cores {threads} {params.rs} {input.saf1} {input.saf2} -sfs {input.sfs} -fstout $PREFIX > {log} 2>&1  "



rule extract_fst_values:
  input:
    "results/fst_bin/{p1}--x--{p2}.fst.idx"
  output:
    "results/fst/{p1}--x--{p2}.txt"
  log:
    "results/logs/extract_fst_values/{p1}--x--{p2}.txt"
  benchmark:
    "results/benchmarks/extract_fst_values/{p1}--x--{p2}.txt"
  shell:
    "realSFS fst stats {input} > {output} 2>{log} "
